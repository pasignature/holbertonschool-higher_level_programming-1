>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> lazy_matrix_mul(0, 0)
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> lazy_matrix_mul([], 0)
Traceback (most recent call last):
...
TypeError: m_b must be a list

>>> lazy_matrix_mul([], [])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> lazy_matrix_mul([[]], [])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

>>> lazy_matrix_mul([[]], [[]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[0]], [[]])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> lazy_matrix_mul([['A', 0], [0, 0]], [[0, 0], ['A', 0]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> lazy_matrix_mul([[0, 0], [0, 0]], [[0, 0], ['A', 0]])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

>>> lazy_matrix_mul([[0], [0, 0]], [[0, 0], [0]])
Traceback (most recent call last):
...
TypeError: each row of m_a must should be of the same size

>>> lazy_matrix_mul([[0], [0]], [[0, 0], [0]])
Traceback (most recent call last):
...
TypeError: each row of m_b must should be of the same size

>>> lazy_matrix_mul([[0], [0]], [[0], [0]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> lazy_matrix_mul([[1], [2]], [[3]])
array([[3],
       [6]])

>>> lazy_matrix_mul([[1, 2, 3],[2, 3, 4],[3, 4, 5]], [[-4, 5],[5, -6], [-6, 7]])
array([[-12,  14],
       [-17,  20],
       [-22,  26]])
